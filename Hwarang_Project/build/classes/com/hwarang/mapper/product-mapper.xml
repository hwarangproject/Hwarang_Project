<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hwarang.mapper.product-mapper">
	<!-- 메인 테스트 -->
	<select id="productListData" resultType="ProductVO">
	  SELECT * FROM product WHERE product_no BETWEEN 2 AND 5
	</select>
	
	<select id="productDetailData" resultType="ProductVO" parameterType="int">
  	  SELECT * FROM product WHERE product_no=#{pno}
	</select>
	
	<!-- 카테고리 항목 전체목록 출력 -->
	<select id="product_category" resultType="ProductVO" parameterType="java.util.Map">
		SELECT * FROM product WHERE detcategory_no BETWEEN #{start} AND #{end}
	</select>
	
	
	<!-- 카테고리 항목 하나 출력-->
	<select id="product_detail_category" resultType="ProductVO" parameterType="int">
		SELECT * FROM product WHERE detcategory_no=#{dcno}
	</select>
	
	<!-- 카테고리 리스트 출력 ex) 목록들 -->
	<select id="detail_cate_list" resultType="DetailcateVO">
		SELECT * FROM detailcate
	</select>
	
	<!-- ############################### 연령별 ################################################ -->
	
	<select id="product_10_age" resultType="ProductVO">
		<![CDATA[
			SELECT * FROM (SELECT * FROM product ORDER BY like_10 DESC) WHERE ROWNUM<=100
		]]> 
	</select>
	
	<select id="product_20_age" resultType="ProductVO">
		<![CDATA[
			SELECT * FROM (SELECT * FROM product ORDER BY like_20 DESC) WHERE ROWNUM<=100
		]]>
	</select>
	
	<select id="product_30_age" resultType="ProductVO">
		<![CDATA[
			SELECT * FROM (SELECT * FROM product ORDER BY like_30 DESC) WHERE ROWNUM<=100
		]]>
	</select>
	
	<select id="product_40_age" resultType="ProductVO">
		<![CDATA[
			SELECT * FROM (SELECT * FROM product ORDER BY like_40 DESC) WHERE ROWNUM<=100
		]]>
	</select>
	
	<select id="product_50_age" resultType="ProductVO">
		<![CDATA[
			SELECT * FROM (SELECT * FROM product ORDER BY like_50 DESC) WHERE ROWNUM<=100
		]]>
	</select>
	
	<!-- ################################ 연령별 끝 ############################################### -->
	
	<!-- 브랜드 초성 검색 출력 -->
	<select id="brandListSearch" resultType="ProductVO" parameterType="java.util.Map">
		SELECT distinct brand,brand_img FROM product WHERE brand BETWEEN NCHR(#{start}) AND NCHR(#{end}) 
	</select>
	<!-- 브랜드 페이지 검색 ex)가격별, 평점별 -->
	<select id="brand_Filter"  resultType="ProductVO" parameterType="String">
		SELECT * FROM product WHERE brand=#{brand}
		<!-- <if test="">
		
		</if> -->
	</select>
	
	<!-- 브랜드 개별페이지 * 페이지 나누기 -->
	<select id="brandPageDivision" resultType="ProductVO" parameterType="hashmap">
	SELECT distinct product_no, brand, product_name, price, score, brand_img, product_img, num 
	FROM (SELECT distinct product_no, brand, product_name, price, score, brand_img, product_img, rownum as num 
	FROM (SELECT distinct product_no, brand, product_name, price, score, brand_img, product_img FROM product WHERE brand=#{brand} ORDER BY score DESC ))  
	WHERE num BETWEEN ${start} AND ${end}
	<!-- 
		parameterType="java.util.Map"
			#{start} ==> map.get("start") => map의 키값과 일치해야함
		parameterType="BoardVO"
			#{name} ==> vo.getName() => vo가 가지고 있는 변수명과 일치
	 -->
	</select>
	<!-- 브랜드 총페이지 -->
	<select id="brandTotalPage" resultType="int" parameterType="String">
		SELECT CEIL(COUNT(*)/12.0) FROM product WHERE brand=#{brand} -->
	</select>
	<!-- 브랜드 페이지 나누기 -->
	<select id="brandListPageDivision" resultType="ProductVO" parameterType="hashmap">
	SELECT distinct brand,brand_img, num 
	FROM (SELECT distinct brand,brand_img, rownum as num
	FROM (SELECT distinct brand,brand_img FROM product WHERE brand BETWEEN NCHR(#{start}) AND NCHR(#{end})))
	WHERE num BETWEEN #{start2} AND #{end2}
	<!-- 
		parameterType="java.util.Map"
			#{start} ==> map.get("start") => map의 키값과 일치해야함
		parameterType="BoardVO"
			#{name} ==> vo.getName() => vo가 가지고 있는 변수명과 일치
	 -->
	</select>
	<!-- 브랜드 총페이지 -->
	<select id="brandListTotalPage" resultType="int" parameterType="hashmap">
		SELECT CEIL(count(distinct brand)/20.0) FROM product WHERE brand BETWEEN NCHR(#{start}) AND NCHR(#{end})
	</select>
	
	<!-- 상품 댓글 -->
	<select id="productReplyListData" resultType="Product_replyVO" parameterType="int">
     SELECT a.*, b.profile_img, b.id, b.sex, b.skin_type, b.age_group  
     FROM product_reply a, member b
     WHERE a.member_no = b.member_no
     AND product_no = #{product_no}
     ORDER BY a.reply_regdate 
    </select>
	<insert id="productReplyInsert" parameterType="Product_replyVO">
     INSERT INTO product_reply VALUES(
       #{reply_content},
       SYSDATE,
       #{product_rate},
       #{product_no},
       #{member_no},
       (SELECT NVL(MAX(reply_no)+1,1) FROM product_reply WHERE member_no = #{member_no2})
     )
   </insert>
   <update id="productReplyCntIncrement" parameterType="int">
     UPDATE product
     SET review_cnt = review_cnt + 1
     WHERE product_no = #{product_no}
   </update>
   <update id="productReplyCntDecrement" parameterType="int">
     UPDATE product
     SET review_cnt = review_cnt - 1
     WHERE product_no = #{product_no}
   </update>
   <update id="productReplyUpdate" parameterType="Product_replyVO">
     UPDATE product_reply SET
     reply_content = #{reply_content}
     WHERE member_no = #{member_no} AND reply_no = #{reply_no}
   </update>
   <delete id="productReplyDelete" parameterType="Product_replyVO">
    DELETE FROM product_reply
    WHERE member_no = #{member_no} AND reply_no = #{reply_no}
   </delete>
   
</mapper>

